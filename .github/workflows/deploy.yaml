name: Deploy to AWS

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  EB_APP_NAME: ${{ vars.EB_APP_NAME }}
  EB_ENV_NAME: ${{ vars.EB_ENV_NAME }}
  DEPLOY_PACKAGE_NAME: "classifier-api-${{ github.sha }}.zip"

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: classifier_api_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        run: |
          pytest
        env:
          FLASK_ENV: testing
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/classifier_api_test
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET_NAME: classifier-models-test

  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Elastic Beanstalk deployment package
        run: |
          mkdir -p .ebextensions
          echo '
          option_settings:
            aws:elasticbeanstalk:container:python:
              WSGIPath: wsgi:app
            aws:elasticbeanstalk:application:environment:
              FLASK_ENV: ${{ vars.FLASK_ENV || 'production' }}
          ' > .ebextensions/01_environment.config

          zip -r ${{ env.DEPLOY_PACKAGE_NAME }} . -x "*.git*" "terraform/*" ".github/*" "tests/*" "*.pyc" "instance/*" "*.csv" "*.ipynb"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APP_NAME }}
          environment_name: ${{ env.EB_ENV_NAME }}
          version_label: "v-${{ github.sha }}"
          region: ${{ env.AWS_REGION }}
          deployment_package: ${{ env.DEPLOY_PACKAGE_NAME }}
          wait_for_environment_recovery: 300

      - name: Upload deployment package artifact
        uses: actions/upload-artifact@v3
        with:
          name: eb-deploy-package
          path: ${{ env.DEPLOY_PACKAGE_NAME }}
