name: Deploy Backend to AWS

on:
  workflow_dispatch: # Allow manual trigger regardless of changed files

env:
  AWS_REGION: eu-west-1 # Updated to match your region
  EB_APP_NAME: ${{ vars.EB_APP_NAME }}
  EB_ENV_NAME: ${{ vars.EB_ENV_NAME }}
  DEPLOY_PACKAGE_NAME: "classifier-api-${{ github.sha }}.zip"

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          cd Backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare migrations directory
        run: |
          cd Backend
          # Ensure migrations directory exists
          mkdir -p migrations/versions

          # Create an empty __init__.py in migrations directory if it doesn't exist
          if [ ! -f migrations/__init__.py ]; then
            touch migrations/__init__.py
          fi

          # Create an empty __init__.py in versions directory if it doesn't exist
          if [ ! -f migrations/versions/__init__.py ]; then
            touch migrations/versions/__init__.py
          fi

      - name: Create Elastic Beanstalk deployment package
        run: |
          # Navigate to Backend directory
          cd Backend

          # Create necessary directories
          mkdir -p .ebextensions
          mkdir -p .platform/nginx/conf.d

          # Environment settings
          echo '
          option_settings:
            aws:elasticbeanstalk:container:python:
              WSGIPath: wsgi:app
            aws:elasticbeanstalk:application:environment:
              FLASK_ENV: ${{ vars.FLASK_ENV }}
              FLASK_APP: wsgi.py
          ' > .ebextensions/01_environment.config

          # Simple DB migration configuration - just run the upgrade command
          echo '
          container_commands:
            01_install_requirements:
              command: "source /var/app/venv/*/bin/activate && pip install -r requirements.txt"
              leader_only: true
            
            02_pause_before_migration:
              command: "sleep 5"
              leader_only: true
            
            03_upgrade_db:
              command: "source /var/app/venv/*/bin/activate && cd /var/app/current && flask db upgrade"
              leader_only: true
          ' > .ebextensions/02_migrate.config

          # Create Nginx configuration for large file uploads
          echo 'client_max_body_size 50M;' > .platform/nginx/conf.d/client_max_body_size.conf

          # Create deployment package from Backend directory
          zip -r ../${{ env.DEPLOY_PACKAGE_NAME }} . -x "*.git*" "terraform/*" ".github/*" "tests/*" "*.pyc" "instance/*" "*.csv" "*.ipynb"

          # Move back to root
          cd ..

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APP_NAME }}
          environment_name: ${{ env.EB_ENV_NAME }}
          version_label: "v-${{ github.sha }}"
          region: ${{ env.AWS_REGION }}
          deployment_package: ${{ env.DEPLOY_PACKAGE_NAME }}
          wait_for_environment_recovery: 300

      - name: Upload deployment package artifact
        uses: actions/upload-artifact@v4
        with:
          name: eb-deploy-package
          path: ${{ env.DEPLOY_PACKAGE_NAME }}
